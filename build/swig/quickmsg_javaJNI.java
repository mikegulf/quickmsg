/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package quickmsg;

public class quickmsg_javaJNI {
  public final static native long new_MessageVec__SWIG_0();
  public final static native long new_MessageVec__SWIG_1(long jarg1);
  public final static native long MessageVec_size(long jarg1, MessageVec jarg1_);
  public final static native long MessageVec_capacity(long jarg1, MessageVec jarg1_);
  public final static native void MessageVec_reserve(long jarg1, MessageVec jarg1_, long jarg2);
  public final static native boolean MessageVec_isEmpty(long jarg1, MessageVec jarg1_);
  public final static native void MessageVec_clear(long jarg1, MessageVec jarg1_);
  public final static native void MessageVec_add(long jarg1, MessageVec jarg1_, long jarg2, Message jarg2_);
  public final static native long MessageVec_get(long jarg1, MessageVec jarg1_, int jarg2);
  public final static native void MessageVec_set(long jarg1, MessageVec jarg1_, int jarg2, long jarg3, Message jarg3_);
  public final static native void delete_MessageVec(long jarg1);
  public final static native long new_PeerVec__SWIG_0();
  public final static native long new_PeerVec__SWIG_1(long jarg1);
  public final static native long PeerVec_size(long jarg1, PeerVec jarg1_);
  public final static native long PeerVec_capacity(long jarg1, PeerVec jarg1_);
  public final static native void PeerVec_reserve(long jarg1, PeerVec jarg1_, long jarg2);
  public final static native boolean PeerVec_isEmpty(long jarg1, PeerVec jarg1_);
  public final static native void PeerVec_clear(long jarg1, PeerVec jarg1_);
  public final static native void PeerVec_add(long jarg1, PeerVec jarg1_, long jarg2, Peer jarg2_);
  public final static native long PeerVec_get(long jarg1, PeerVec jarg1_, int jarg2);
  public final static native void PeerVec_set(long jarg1, PeerVec jarg1_, int jarg2, long jarg3, Peer jarg3_);
  public final static native void delete_PeerVec(long jarg1);
  public final static native void init(String jarg1);
  public final static native void shutdown__SWIG_0(String jarg1);
  public final static native void shutdown__SWIG_1();
  public final static native boolean ok();
  public final static native void Message_header_set(long jarg1, Message jarg1_, long jarg2);
  public final static native long Message_header_get(long jarg1, Message jarg1_);
  public final static native void Message_msg_set(long jarg1, Message jarg1_, String jarg2);
  public final static native String Message_msg_get(long jarg1, Message jarg1_);
  public final static native long new_Message__SWIG_0();
  public final static native long new_Message__SWIG_1(long jarg1, Message jarg1_);
  public final static native void delete_Message(long jarg1);
  public final static native double Message_get_stamp(long jarg1, Message jarg1_);
  public final static native String Message_get_context(long jarg1, Message jarg1_);
  public final static native String Message_get_src(long jarg1, Message jarg1_);
  public final static native String Message_get_msg(long jarg1, Message jarg1_);
  public final static native void Message_set_stamp_now(long jarg1, Message jarg1_);
  public final static native void Message_set_context(long jarg1, Message jarg1_, String jarg2);
  public final static native void Message_set_msg(long jarg1, Message jarg1_, String jarg2);
  public final static native long new_ServiceReply__SWIG_0();
  public final static native long new_ServiceReply__SWIG_1(long jarg1, ServiceReply jarg1_);
  public final static native long new_ServiceReply__SWIG_2(long jarg1, Message jarg1_, boolean jarg2);
  public final static native long new_ServiceReply__SWIG_3(long jarg1, Message jarg1_);
  public final static native void delete_ServiceReply(long jarg1);
  public final static native void ServiceReply_successful_set(long jarg1, ServiceReply jarg1_, boolean jarg2);
  public final static native boolean ServiceReply_successful_get(long jarg1, ServiceReply jarg1_);
  public final static native long new_Publisher__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_Publisher__SWIG_1(String jarg1);
  public final static native void delete_Publisher(long jarg1);
  public final static native void Publisher_publish(long jarg1, Publisher jarg1_, String jarg2);
  public final static native void Publisher_join(long jarg1, Publisher jarg1_);
  public final static native void default_cb(long jarg1, Message jarg1_, long jarg2);
  public final static native long new_Subscriber__SWIG_0(String jarg1, long jarg2);
  public final static native long new_Subscriber__SWIG_1(String jarg1);
  public final static native void delete_Subscriber(long jarg1);
  public final static native long Subscriber_messages(long jarg1, Subscriber jarg1_);
  public final static native void Subscriber_join(long jarg1, Subscriber jarg1_);
  public final static native long new_AsyncSubscriber__SWIG_0(String jarg1, long jarg2, long jarg3);
  public final static native long new_AsyncSubscriber__SWIG_1(String jarg1, long jarg2);
  public final static native long new_AsyncSubscriber__SWIG_2(String jarg1);
  public final static native void delete_AsyncSubscriber(long jarg1);
  public final static native void AsyncSubscriber_spin(long jarg1, AsyncSubscriber jarg1_);
  public final static native void AsyncSubscriber_async_spin(long jarg1, AsyncSubscriber jarg1_);
  public final static native void AsyncSubscriber_handle_message(long jarg1, AsyncSubscriber jarg1_, long jarg2, Message jarg2_);
  public final static native void AsyncSubscriber_handle_messageSwigExplicitAsyncSubscriber(long jarg1, AsyncSubscriber jarg1_, long jarg2, Message jarg2_);
  public final static native void AsyncSubscriber_director_connect(AsyncSubscriber obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AsyncSubscriber_change_ownership(AsyncSubscriber obj, long cptr, boolean take_or_release);
  public final static native long new_Service__SWIG_0(String jarg1, long jarg2);
  public final static native long new_Service__SWIG_1(String jarg1);
  public final static native long new_Service__SWIG_2(String jarg1, IServiceCallback jarg2, long jarg4);
  public final static native long new_Service__SWIG_3(String jarg1, IServiceCallback jarg2);
  public final static native void delete_Service(long jarg1);
  public final static native String Service_service_impl(long jarg1, Service jarg1_, long jarg2, Message jarg2_);
  public final static native String Service_service_implSwigExplicitService(long jarg1, Service jarg1_, long jarg2, Message jarg2_);
  public final static native void Service_spin(long jarg1, Service jarg1_);
  public final static native void Service_async_spin(long jarg1, Service jarg1_);
  public final static native void Service_director_connect(Service obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Service_change_ownership(Service obj, long cptr, boolean take_or_release);
  public final static native long new_ServiceCallTimeout__SWIG_0();
  public final static native long new_ServiceCallTimeout__SWIG_1(String jarg1);
  public final static native void delete_ServiceCallTimeout(long jarg1);
  public final static native String ServiceCallTimeout_what(long jarg1, ServiceCallTimeout jarg1_);
  public final static native long new_Client(String jarg1);
  public final static native void delete_Client(long jarg1);
  public final static native long Client_call__SWIG_0(long jarg1, Client jarg1_, String jarg2, int jarg3) throws quickmsg.ServiceCallTimeout;
  public final static native long Client_call__SWIG_1(long jarg1, Client jarg1_, String jarg2) throws quickmsg.ServiceCallTimeout;
  public final static native String Client_calls__SWIG_0(long jarg1, Client jarg1_, String jarg2, int jarg3) throws quickmsg.ServiceCallTimeout;
  public final static native String Client_calls__SWIG_1(long jarg1, Client jarg1_, String jarg2) throws quickmsg.ServiceCallTimeout;
  public final static native long new_Peer(String jarg1, String jarg2);
  public final static native void delete_Peer(long jarg1);
  public final static native String Peer_uuid(long jarg1, Peer jarg1_);
  public final static native String Peer_description(long jarg1, Peer jarg1_);
  public final static native long new_GroupNode__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_GroupNode__SWIG_1(String jarg1);
  public final static native long new_GroupNode__SWIG_2();
  public final static native void delete_GroupNode(long jarg1);
  public final static native void GroupNode_join__SWIG_0(long jarg1, GroupNode jarg1_, String jarg2);
  public final static native void GroupNode_wait_join(long jarg1, GroupNode jarg1_, String jarg2);
  public final static native void GroupNode_leave(long jarg1, GroupNode jarg1_, String jarg2);
  public final static native void GroupNode_register_handler(long jarg1, GroupNode jarg1_, String jarg2, IMessageCallback jarg3);
  public final static native void GroupNode_register_whispers(long jarg1, GroupNode jarg1_, IMessageCallback jarg2);
  public final static native void GroupNode_shout(long jarg1, GroupNode jarg1_, String jarg2, String jarg3);
  public final static native void GroupNode_whisper(long jarg1, GroupNode jarg1_, long jarg2, String jarg3);
  public final static native void GroupNode_whispers(long jarg1, GroupNode jarg1_, String jarg2, String jarg3);
  public final static native void GroupNode_peers(long jarg1, GroupNode jarg1_, long jarg2);
  public final static native void GroupNode_peers_by_description(long jarg1, GroupNode jarg1_, long jarg2, String jarg3);
  public final static native void GroupNode_stop(long jarg1, GroupNode jarg1_);
  public final static native void GroupNode_spin(long jarg1, GroupNode jarg1_);
  public final static native void GroupNode_async_spin(long jarg1, GroupNode jarg1_);
  public final static native void GroupNode_join__SWIG_1(long jarg1, GroupNode jarg1_);
  public final static native String GroupNode_name();
  public final static native long ServiceReply_SWIGUpcast(long jarg1);

  public static void SwigDirector_AsyncSubscriber_handle_message(AsyncSubscriber jself, long msg) {
    jself.handle_message((msg == 0) ? null : new Message(msg, false));
  }
  public static String SwigDirector_Service_service_impl(Service jself, long req) {
    return jself.service_impl((req == 0) ? null : new Message(req, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
